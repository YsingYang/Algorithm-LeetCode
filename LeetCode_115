class Solution {
/**
 * 设dp[i][j] 位s[0-j-1],t[0-i-1]时的distinst subsequence
 * 状态变换关系如下。
 * dp[i][j] = dp[i-1][j-1] + dp[i][j-1] ->t[i-1] == s[j-1]
 * dp[i][j] = dp[i][j-1] t[i-1]!= s[j-1]
 * 
 * 
 */
public:
    int numDistinct(string s, string t) {
        int ts = t.size(),ss = s.size();
        vector<vector<int>> dp(ts+1,vector<int>(ss+1,0));
        for(int i=0;i<=ss;++i){
            dp[0][i] = 1;
        }//当ts为空时，则对应的dp[0][i] = 1;仅有1中distinst subsequences
        
        for(int i=1;i<=ts;++i){
            for(int j=1;j<=ss;++j){
                if(s[j-1]==t[i-1]){
                    dp[i][j] = dp[i-1][j-1] + dp[i][j-1];
                }
                else{
                    dp[i][j] = dp[i][j-1];
                }
            }
        }
        return dp[ts][ss];
    }
};
