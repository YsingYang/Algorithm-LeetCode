
//Python Solution
class Solution(object):
    def isHappy(self, n):

        if n < 0:
            return False
        mp = set()
        while n != 1:
            if n in mp:
                return False
            mp.add(n)
            sum = 0
            for num in str(n):
                sum += int(num) ** 2
            n = sum
        return True

//more concise solution, 
class Solution(object):
    def isHappy(self, n):

        if n <= 0:
            return False
        while n != 42 :
            n = sum(i * i for i in map(int, str(n)))
            if n == 1:
                return True
        return False
            

//C++ Version
class Solution {
public:
    /**
     * @param n an integer
     * @return true if this is a happy number or false
     */
    bool isHappy(int n) {
        // Write your code here
        unordered_set<int> mp;
        while(n){
            if(n == 1)
                return true;
            if(mp.find(n) != mp.end())
                return false;
            int next = 0;
            mp.insert(n);
            while(n){
                next += pow(n % 10, 2);
                n /= 10;
            }
            swap(n, next);
        }
    }
};
        
