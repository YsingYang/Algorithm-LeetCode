/*
    比较简单的一个思路，用mutiset<int> 存，超过k时pop出第一个节点就可以了
    但算法的时间复杂度是o(nlgn)
*/
class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> res;
        if(nums.empty())
            return res;
        multiset<int> windows(nums.begin(),nums.begin()+k-1);//题目说明了k的边界情况
        for(int i=k-1;i<nums.size();++i){
            windows.insert(nums[i]);
            res.push_back(*(--windows.end()));
            windows.erase(windows.find(nums[i-k+1]));
        }
        return res;
    }
};
