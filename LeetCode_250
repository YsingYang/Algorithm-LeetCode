/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int countUnivalSubtrees(TreeNode* root) {
        int count=0;
        countSub(root,count);
        return count;
    }
    
    bool countSub(TreeNode* root,int &count){
        if(!root)
            return true;
        if(!root->left&&!root->right){
            ++count;
            return true;
        }
        bool lTree = countSub(root->left,count),rTree = countSub(root->right,count);
        if(lTree&&rTree){
            if((!root->left||root->val==root->left->val)&&(!root->right||root->right->val==root->val)){
                ++count;
                return true;
            }
        }
        return false;
    }
};
