class Solution {
static vector<string> lower;
static vector<string> ten;
static vector<string> thousand;
public:
    string numberToWords(int num) {
        if(num==0)
            return "Zero";
        int idx = 0;
        string res;
        while(num){
            int cur = num%1000;
            string tmp;
            if(cur!=0){
                if(cur/100){
                    tmp += lower[cur/100] + " Hundred ";
                    cur = cur% 100;
                } 
                if(cur<20)
                    tmp += lower[cur] + (cur==0?"":" ");
                else{
                    tmp += ten[cur/10%10] +" " +  (cur%10==0?"":lower[cur%10] + (cur==0?"":" "));
                }
                tmp += idx==0?"":thousand[idx] + " ";
            }
            ++idx;
            num /=1000;
            res = tmp + res;
        }
        auto it = --res.end();
        while(it>=res.begin()&&*it==' '){
            res.erase(it--);
        }
        return res;
    }
};
vector<string> Solution::lower ={"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
vector<string> Solution::ten = {"", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
vector<string> Solution::thousand = {"", "Thousand", "Million", "Billion"};
