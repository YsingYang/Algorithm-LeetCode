//first solution use O(n) time and O(1) space(two vector<int>)
class Solution {
public:
    string getHint(string secret, string guess) {
        int bull=0;
        vector<int> visited(10,0);
        vector<int> match(10,0);
        for(int i=0;i<secret.size();++i){
            if(secret[i]==guess[i]){
                ++bull;
            }
            else{
                ++visited[secret[i]-'0'];
                ++match[guess[i]-'0'];
            }
        }
        int cow=0;
        for(int i=0;i<=9;++i){
            cow+=min(match[i],visited[i]);
            //cout<<i<<" and "<<cow<<endl;
        }
        return to_string(bull)+'A'+to_string(cow)+'B';
        
    }
    
};

//second solution just use one vector<int> (10),It's a smart idea (I think).

class Solution {
public:
    string getHint(string secret, string guess) {
        int bull=0,cow=0;
        vector<int> visited(10,0);
        for(int i=0;i<secret.size();++i){
            if(secret[i]==guess[i]){
                ++bull;
            }
            else{ 
                if(visited[secret[i]-'0']==INT_MIN)
                    visited[secret[i]-'0']=0;
                if(visited[secret[i]-'0']<0)
                    ++cow;
                if(visited[guess[i]-'0']>0)
                    ++cow;
                ++visited[secret[i]-'0'];
                --visited[guess[i]-'0'];
            }
        }
        return to_string(bull)+'A'+to_string(cow)+'B';
        
    }
    
};
