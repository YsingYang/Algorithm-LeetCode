//Solution_1 binary search ,you can use long types,

class Solution {
public:
    bool isPerfectSquare(int num) {
        if(num<=0)  return false;
        int f = 1,r = num;
        int mid;
        while(f<=r){
            mid = f+((r-f)>>1);
            if(mid>46340){
                r=46340;
                continue;
            }
            if(mid*mid<num){
                f = mid+1;
            }
            else if(mid*mid>num){
                r = mid-1;
            }
            else
                return true;
        }
        return false;
        
    }
};

//Solution_2 obviously,perfect square is 1 + 3 + 5 + 7....
class Solution {
public:
    bool isPerfectSquare(int num) {
        if(num<1)   return false;
        for(int i=1;num>0;i+=2){
            num -=i;
        }
        return num==0;
    }
};

//Solution_3 Newtons_method (very useful)
class Solution {
public:
    bool isPerfectSquare(int num) {
        if(num<=0)  return false;
        long sq = num;
        while(sq * sq>num){
            sq = (sq + num/sq) >>1;
        }
        return sq*sq ==num;
    }
};
