/*
   Wiggle Subsequence
   It's a question which was worth thinking about
*/
//Optimized dynamic programming
class Solution {
public:
    int wiggleMaxLength(vector<int>& nums) {
        int f =1 ,r=1,size = nums.size();
        for(int i=1;i<size;++i){
            if(nums[i]>nums[i-1]){
                f = r+1;
            }
            else if(nums[i]<nums[i-1]){
                r = f+1;
            }
        }
        return min(size,max(f,r));//
    }
};

//Greed 
public class Solution {
    public int wiggleMaxLength(int[] nums) {
        if (nums.length < 2)
            return nums.length;
        int prevdiff = nums[1] - nums[0];
        int count = prevdiff != 0 ? 2 : 1;
        for (int i = 2; i < nums.length; i++) {
            int diff = nums[i] - nums[i - 1];
            if ((diff > 0 && prevdiff <= 0) || (diff < 0 && prevdiff >= 0)) {
                count++;
                prevdiff = diff;
            }
        }
        return count;
    }
}
