/*
    1.该方法为先预处理，将<=0的数放到数组尾部，大于0的数放到数组头部
    2. 第二次预处理，取nums[nums[i]-1],另其为负数
    代码int index = abs(nums[i])-1;
        nums[index] = -abs(nums[index]);，相当于做标记（利用下标标记这个数出现过），注意可能有多个重复数的问题
    3. 查找在正数范围内，没有index下标下的数没有变成负数的index,index+1就是他的值
*/
class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        //preprocess,将正整数（除0）都放在尾部
        if(nums.empty())
            return 1;
        int left = 0,right = nums.size()-1;
        while(left<=right){
            if(nums[left]<=0)
                swap(nums[left],nums[right--]);
            else
                ++left;
        }
        int index;
        for(int i=0;i<left;++i){
            if(abs(nums[i])>left)
                continue;
            else{
                int index = abs(nums[i])-1;
                nums[index] = -abs(nums[index]);
            }
        }
        int i=0;
        while(i<left&&nums[i]<0)
            ++i;
        return i+1;
    }
};
