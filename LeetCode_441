//My solution

class Solution {
public:
    int arrangeCoins(int n) {
        if(n==1||n==0)    return n;
        int f = 0,l = n;
        while(f<l){
            int mid = f + ((l-f)>>1);
            double temp = (double)(n)/((1.0+mid)/2);
            if(temp<mid){
                l = mid;
            }
            else if(temp>mid){
                f = mid+1 ;
            }
            else{
                return mid;
            }
        }
        return f-1;
    }
};

//@zyoppy008 consice solution
int arrangeCoins(int n) {
        long low = 1, high = n;
        while (low < high) {
            long mid = low + (high - low + 1) / 2;//long,pay attention of this , high - low +1 would not have TLE with low =mid ,high =mid-1
            if ((mid + 1) * mid / 2.0 <= n) low = mid;//does it overflow?
            else high = mid - 1;
        }
        return high;
    }
