class Solution {
/****
 * ..跟那道atoi一样类型的题目...感觉是作为atoi的预处理而做的
 * 需要注意的是正负号的出现，和.,e的出现，e后面的数字可以继续出现正负号，但不能出现.
 * 
 */
public:
    bool isNumber(string s) {
        auto it = --s.end();
        while(*it==' ')
            s.erase(it--);
        if(s.empty())
            return false;
        int idx = s.find_first_not_of(' '),point = 0,e = 0;
        if(s[idx]=='+'||s[idx]=='-')
            ++idx;
        while(idx<s.size()){
            if(s[idx]=='.'||s[idx]=='e'){
                if((s[idx]=='.'&&++point>1)||(s[idx]=='e'&&++e>1))
                    return false;
                if(e>0&&point==0)
                    point = 1;
                if((s[idx]=='.'&&!(idx>0&&isdigit(s[idx-1])||idx<s.size()-1&&isdigit(s[idx+1])))||(s[idx]=='e'&&!(idx>0&&(isdigit(s[idx-1])||s[idx-1]=='.')&&idx<s.size()-1&&(isdigit(s[idx+1])||s[idx+1]=='+'||s[idx+1]=='-')))){
                    return false;
                }
                if(s[idx]=='e'&&(s[idx+1]=='+'||s[idx+1]=='-')){
                    ++idx;
                    if(idx+1==s.size()||!isdigit(s[idx+1]))
                        return false;
                }
                ++idx;
                continue;
            }
            if(!isdigit(s[idx]))
                return false;
            ++idx;
        }
        return true;
        
    }
};


class Solution {
/***
 * DFA 有限状态转换
 */
public:
    bool isNumber(string s) {
        int state = 0,flag = 0;
        int idx = s.find_first_not_of(' ');
        s.erase(s.find_last_not_of(' ')+1,s.size());
        for(;idx<s.size();++idx){
            if(isdigit(s[idx])){///数字的状态转换
                flag = 1;
                if(state<=2)
                    state = 2;
                else
                    state = (state<=5)?5:7;
            }
            else if('+'==s[idx]||'-'==s[idx]){///3是碰到e的时候切换过来的状态
                if(state==0||state==3)
                    ++state;
                else
                    return false;
            }
            else if(s[idx]=='.'){
                if(state<=2)
                    state = 6;
                else
                    return false;
            }
            else if(s[idx]=='e'){///前面一定需要有数字
                if(flag&&(state==2||state==6||state==7)){
                    state = 3;
                }
                else
                    return false;
            }
            else
                return false;
            //cout<<state<<endl;
        }
        return state==2||state==5||(flag&&state==6)||state==7;
    }
};
