/*
    普通的sliding windows的方法，以right-left+1为windows的string。
    1. 建立哈希，mp(128)，记录t字符出现的个数，记录count (字符个数)
    2.以right为外部循环逐步遍历string,如果s[right]为t串的中的字符--count;
    3.当count==0时，满足子串要求，执行内部循环操作（注意这里内部要用while，如果当当用if不一定能找到最短子串的）
    4.内部循环中每次pop出一个left字符，如果还满足count==0&&left<=right,则继续循环，直到不满足
    5.++right 执行下一步循环

*/
class Solution {
public:
    string minWindow(string s, string t) {
        vector<int> mp(128,0);
        int count = t.size();
        for(int i=0;i<count;++i){
            ++mp[t[i]];
        }
        int left = 0,right=0;
        string windows;
        while(right<s.size()){
            if((--mp[s[right]])>=0){//这里会不会出错？
                --count;
                while(left<=right&&count==0){
                    if(windows.size()==0||(right-left)<windows.size())
                        windows = s.substr(left,right-left+1);
                    if((++mp[s[left++]])>0)
                        ++count;
                }
            }
            ++right;
        }
        return windows;
    }
};
