/***************************

优化空间并没有多大的提升...

***************************/

class Solution {
public:
    vector<string> letterCasePermutation(string S) {
        vector<string>  result;
        int size = S.size();
        backtrack(result, 0, S, size);
        return result;
    }
    
private:
    void backtrack(vector<string>& res, int index, string& str, const int& size) {
        if(index == size) {
            res.emplace_back(str);
            return;
        }
        backtrack(res, index+1, str, size);
        if(islower(str[index])) { //如果是小写
            str[index] -= 32;
            backtrack(res, index+1, str, size);
            str[index] += 32;
        }
        else if(isupper(str[index])) {
            str[index] += 32;
            backtrack(res, index+1, str, size);
            str[index] -= 32;
        }
    }
};
