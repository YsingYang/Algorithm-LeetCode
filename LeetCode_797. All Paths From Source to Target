class Solution {
/********************

    DFS ..后来想了一下 ， 用mp简直是多余的,,,

*********************/
public:
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        vector<int> path;
        vector<vector<int>> result;
        map<int, set<int>> mp;
        getMap(graph, mp);
        getAllPath(mp, path, result, 0, graph.size()-1);
        return result;
    }
    
    void getAllPath(map<int, set<int>>& mp, vector<int>& path, vector<vector<int>>& result, int index, const int target) {
        if(index == target) {
            path.push_back(index);
            result.emplace_back(path);
            path.pop_back();
            return;
        }
        
        for(int i : mp[index]) {
            path.push_back(index);
            getAllPath(mp, path, result, i, target);
            path.pop_back();
        }
    }
    
        
private:
    
    void getMap(vector<vector<int>>& graph, map<int, set<int>>& mp) {
        for(int i = 0; i < graph.size(); ++i) {
            for(int j : graph[i]) {
                mp[i].insert(j);
            }
        }
    }
    
};
