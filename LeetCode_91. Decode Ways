class Solution {
/****
    这道题注意'0'的特殊情况 . 因为0有可能会导致没有decodeway, 0只可能与之前成为一个组合数
    所以在判断时会有dp[i] = s[i-1] == '0' ? dp[i-2] : dp[i-1] + dp[i-2];
    dp[i] = s[i-1] == '0' ? 0 : dp[i-1];

****/
public:
    int numDecodings(string s) {
        if(s.empty())
            return 0;
        vector<int> dp(s.size() + 1, 0);
        dp[1] = s[0] == '0' ? 0 : 1;
        dp[0] = 1;
        for(int i = 2; i <= s.size(); ++i){
            if(s[i-2] == '1' || (s[i-2] == '2' && s[i-1] >= '0' && s[i-1] <= '6')){
                dp[i] = s[i-1] == '0' ? dp[i-2] : dp[i-1] + dp[i-2];
            }
            else{
                dp[i] = s[i-1] == '0' ? 0 : dp[i-1];
            }
        }
        return dp.back();
    }
};
