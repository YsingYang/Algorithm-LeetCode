//At first glance ,the implementation maybe like this
class Solution {
public:
    int addDigits(int num) {
        while(num/10!=0){
            int res=0;
            while(num!=0){
                res+=num%10;
                num /=10;
            }
            num=res;
        }
        return num;
    }
};
/*
  Thanks for @zhiqing_xiao posted a O(1)-time complexity and O(1)-space Solution with detail explanations in discuss
  
  The problem, widely known as digit root problem, has a congruence formula:
  For base b (decimal case b = 10), the digit root of an integer is:

  dr(n) = 0 if n == 0
  dr(n) = (b-1) if n != 0 and n % (b-1) == 0
  dr(n) = n mod (b-1) if n % (b-1) != 0
  or

  dr(n) = 1 + (n - 1) % 

*/
class Solution {
public:
    int addDigits(int num) {
        return 1+(num-1)%9;
    }
};
