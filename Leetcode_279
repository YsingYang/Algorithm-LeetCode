/*
  It's the most impressive question,Before I read the posts in discuss ,I don't realize it's a Mathematical problems.Math is king!
 
  Also,I have learned using static to improve the run_time;
*/

//Solution 1 DP
class Solution {
public:
    int numSquares(int n) {
        vector<int> res(1);
        for(int i=1;i<=n;++i){
            int min_count=INT_MAX;
            for(int j=sqrt(i);j>=1;--j){
                min_count=min(min_count,res[i-j*j]+1);
            }
            res.push_back(min_count);
        }
        return res[n];
    }
};

//Solution 2 static vector<int> DP

class Solution {
public:
    int numSquares(int n) {
        static vector<int> res(1);
        while(res.size()<=n){
            int size=res.size(),min_count=INT_MAX;
            for(int j=sqrt(size);j>=1;--j){
                min_count=min(min_count,res[size-j*j]+1);
            }
            res.push_back(min_count);
        }
        return res[n];
    }
};

//I will update Mathematical implementation when I understand the theory of this problem
